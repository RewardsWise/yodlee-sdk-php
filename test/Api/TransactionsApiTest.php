<?php
/**
 * TransactionsApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yodlee Core APIs
 *
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee API v1.1 - Overview</a>.<br><br>You will have to set the header before making the API call. The following headers apply to all the APIs:<ul><li>Authorization: This header holds the access token</li> <li> Api-Version: 1.1</li></ul><b>Note</b>: If there are any API-specific headers, they are mentioned explicitly in the respective API's description.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * TransactionsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class TransactionsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createOrRunTransactionCategorizationRules
     *
     * Create or Run Transaction Categorization Rule.
     *
     */
    public function testCreateOrRunTransactionCategorizationRules()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createTransactionCategory
     *
     * Create Category.
     *
     */
    public function testCreateTransactionCategory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteTransactionCategorizationRule
     *
     * Delete Transaction Categorization Rule.
     *
     */
    public function testDeleteTransactionCategorizationRule()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteTransactionCategory
     *
     * Delete Category.
     *
     */
    public function testDeleteTransactionCategory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTransactionCategories
     *
     * Get Transaction Category List.
     *
     */
    public function testGetTransactionCategories()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTransactionCategorizationRules
     *
     * Get Transaction Categorization Rules.
     *
     */
    public function testGetTransactionCategorizationRules()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTransactionCategorizationRulesDeprecated
     *
     * Get Transaction Categorization Rules.
     *
     */
    public function testGetTransactionCategorizationRulesDeprecated()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTransactions
     *
     * Get Transactions.
     *
     */
    public function testGetTransactions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTransactionsCount
     *
     * Get Transactions Count.
     *
     */
    public function testGetTransactionsCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for runTransactionCategorizationRule
     *
     * Run Transaction Categorization Rule.
     *
     */
    public function testRunTransactionCategorizationRule()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateTransaction
     *
     * Update Transaction for Transaction Source ID.
     *
     */
    public function testUpdateTransaction()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateTransaction1
     *
     * Update Transaction.
     *
     */
    public function testUpdateTransaction1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateTransactionCategorizationRule
     *
     * Update Transaction Categorization Rule.
     *
     */
    public function testUpdateTransactionCategorizationRule()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateTransactionCategory
     *
     * Update Category.
     *
     */
    public function testUpdateTransactionCategory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
